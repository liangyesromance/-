<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc.xsd
	     http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    <description>公共配置</description>
    <context:component-scan base-package="com.gitee.sunchenbin.mybatis.actable.manager.*"/>
    <context:component-scan base-package="com.numerx.formweb.trial.manager.impl"/>
    <!--&lt;!&ndash; 扫描包加载Service实现类 &ndash;&gt;-->
    <context:component-scan base-package="com.numerx.formweb.heroform.service"></context:component-scan>
    <context:component-scan base-package="com.numerx.formweb.*"/>
    <!--<context:component-scan base-package="com.numerx.formutil.app.dao"/>-->

    <context:annotation-config></context:annotation-config>
    <!-- 默认的注解映射的支持 -->
    <!--<mvc:annotation-driven>-->
    <!--<mvc:message-converters>-->
    <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
    <!--<property name="objectMapper">-->
    <!--<bean class="com.fasterxml.jackson.databind.ObjectMapper">-->
    <!--<property name="dateFormat">-->
    <!--<bean class="java.text.SimpleDateFormat">-->
    <!--<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"></constructor-arg>-->
    <!--</bean>-->
    <!--</property>-->
    <!--</bean>-->
    <!--</property>-->
    <!--</bean>-->
    <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->
    <!-- 针对freemarker的视图配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        <property name="prefix" value="/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
    <!--<property name="maxUploadSize" value="10240000"/>-->
    <!--<property name="maxInMemorySize" value="10240"/>-->
    <!--</bean>-->


    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">-->
    <!--<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>-->
    <!--<property name="ignoreResourceNotFound" value="true"/>-->
    <!--<property name="locations">-->
    <!--<list>-->
    <!--<value>classpath:/jdbc.properties</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">

        <property name="locations">
            <list>
                <value>classpath*:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer"  lazy-init="true">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="properties" ref="configProperties"></property>
    </bean>

    <!-- 数据源配置 -->
    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="driverClassName" value="${jdbc.driver}" />

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20"/>
        <!-- 连接池最大空闲 -->
        <!--  <property name="maxIdle" value="20"/> -->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>

        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000"/>

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>

        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat"/>

    </bean>

    <!-- 事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!-- 切面 -->
    <!--<aop:config>-->
    <!--<aop:advisor advice-ref="txAdvice"-->
    <!--pointcut="execution(* com.numerx.formweb.heroform.service.impl.*.*(..))" />-->
    <!--</aop:config>-->


    <!-- MyBatis SqlSessionFactoryBean 配置 -->
    <bean id="sqlSessionFactory"
          class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--<property name="typeAliasesPackage" value="com.numerx.formweb.heroform.entity" />-->
        <property name="mapperLocations" >
            <array>
                <value>classpath*:com/gitee/sunchenbin/mybatis/actable/mapping/*/*.xml</value>
                <value>classpath:/mapper/**/*Mapper.xml </value>
            </array>
        </property>
        <property name="plugins">
            <array>
                <!-- 分页插件配置 -->
                <bean id="paginationInterceptor"
                      class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor">
                    <property name="dialectType" value="mysql" />
                </bean>
            </array>
        </property>
    </bean>


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.numerx.formweb.**.mapper;com.gitee.sunchenbin.mybatis.actable.dao.*"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


</beans>