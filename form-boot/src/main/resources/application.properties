#mysql数据库的配置
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.url=jdbc:mysql://127.0.0.1/smartform?serverTimezone=UTC&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123654

#druid
spring.datasource.druid.initial-size=3
spring.datasource.druid.min-idle=3
spring.datasource.druid.max-active=10
spring.datasource.druid.max-wait=60000
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
spring.datasource.druid.filter.stat.log-show-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=1


#flyway配置

# flyway 配置
# 启用或禁用 flyway
spring.flyway.enabled=true
# flyway 的 clean 命令会删除指定 schema 下的所有 table, 生产务必禁掉。这个默认值是 false 理论上作为默认配置是不科学的。
spring.flyway.clean-disabled=true
# SQL 脚本的目录,多个路径使用逗号分隔 默认值 classpath:db/migration
spring.flyway.locations=classpath:db/migration
#  metadata 版本控制信息表 默认 flyway_schema_history
spring.flyway.table=flyway_schema_history
# 如果没有 flyway_schema_history 这个 metadata 表， 在执行 flyway migrate 命令之前, 必须先执行 flyway baseline 命令
# 设置为 true 后 flyway 将在需要 baseline 的时候, 自动执行一次 baseline。
spring.flyway.baseline-on-migrate=true
# 指定 baseline 的版本号,默认值为 1, 低于该版本号的 SQL 文件, migrate 时会被忽略
spring.flyway.baseline-version=1
# 字符编码 默认 UTF-8
spring.flyway.encoding=UTF-8
# 是否允许不按顺序迁移 开发建议 true  生产建议 false
spring.flyway.out-of-order=false
# 需要 flyway 管控的 schema list,这里我们配置为flyway  缺省的话, 使用spring.datasource.url 配置的那个 schema,
# 可以指定多个schema, 但仅会在第一个schema下建立 metadata 表, 也仅在第一个schema应用migration sql 脚本.
# 但flyway Clean 命令会依次在这些schema下都执行一遍. 所以 确保生产 spring.flyway.clean-disabled 为 true
spring.flyway.schemas=flyway
# 执行迁移时是否自动调用验证   当你的 版本不符合逻辑 比如 你先执行了 DML 而没有 对应的DDL 会抛出异常
spring.flyway.validate-on-migrate=true


# 注意注意
mybatis.type-aliases-package=com.numerx.**.entity
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
mybatis.configuration.map-underscore-to-camel-case=true
#把tomcat的默认端口改为8888
server.port = 8888
#用于视图重定向jsp文件的位置
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

#A.Ctable的配置文件
#当mybatis.table.auto=create时，系统启动后，会将所有的表删除掉，然后根据model中配置的结构重新建表，该操作会破坏原有数据。
#当mybatis.table.auto=update时，系统会自动判断哪些表是新建的，哪些字段要修改类型等，哪些字段要删除，哪些字段要新增，该操作不会破坏原有数据。
#当mybatis.table.auto=none时，系统不做任何处理。
mybatis.table.auto=none

#mybatis.model.pack这个配置是用来配置要扫描的用于创建表的对象的包名
mybatis.model.pack=com.numerx.formboot.trial.entity

#数据库为mysql
mybatis.database.type=mysql

#mybatis.mapper-locations=classpath*:mapper/**/*.xml
#
#mybatis-plus.type-aliases-package=com.numerx.fromboot.**.entity
#mybatis-plus.mapper-locations=classpath*:mapper/**/*.xml
#
#mybatis-plus.typeAliasesPackage=com.numerx.formboot.**.entity

mybatis-plus.configuration.jdbc-type-for-null= 'null' 

spring.aop.proxy-target-class=true



spring.jpa.show-sql= true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jackson.serialization.indent_output=false
spring.output.ansi.enabled=detect


log4j.rootLogger=DEBUG,INFO,ERROR,Console
log4j.logger.org.mybatis = INFO
#Console
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t] [%p] [%c.%M] [%L] - %m%n
#RollingFile INFO
log4j.appender.INFO=org.apache.log4j.DailyRollingFileAppender
log4j.appender.INFO.layout=org.apache.log4j.PatternLayout
log4j.appender.INFO.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t] [%p] [%c.%M] [%L] - %m%n
log4j.appender.INFO.Threshold=INFO
log4j.appender.INFO.File=${root}/info.log
#RollingFile2 ERROR
log4j.appender.ERROR=org.apache.log4j.DailyRollingFileAppender
log4j.appender.ERROR.layout=org.apache.log4j.PatternLayout
log4j.appender.ERROR.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t] [%p] [%c.%M] [%L] - %m%n
log4j.appender.ERROR.Threshold=ERROR
log4j.appender.ERROR.Append=true
log4j.appender.ERROR.File=${root}/error.log
root=D:/logs/restfull-web-api


# 是否启用 Dataway 功能（必选：默认false）
HASOR_DATAQL_DATAWAY=true

# 是否开启 Dataway 后台管理界面（必选：默认false）
HASOR_DATAQL_DATAWAY_ADMIN=true

# dataway  API工作路径（可选，默认：/api/）
HASOR_DATAQL_DATAWAY_API_URL=/api/

# dataway-ui 的工作路径（可选，默认：/interface-ui/）
HASOR_DATAQL_DATAWAY_UI_URL=/interface-ui/

# SQL执行器方言设置（可选，建议设置）
HASOR_DATAQL_FX_PAGE_DIALECT=mysql